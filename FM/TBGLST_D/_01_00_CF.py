

#
#
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
# start of FM.TBGLST_D._01_00_CF
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
#
#

from CF.CONSTANTS import NAMES as N
from FM import FM


_moduleName_ = "FM"
_subd0_ = "TBGLST_D"
_sub0_ = "01"
_sub1_ = "00"
_sub2_ = "CF"
# ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱
_filename_ = f"""{N.MAKE_NAME(
		__MODULE_NAME__=_moduleName_,
		__SUBD0__=_subd0_,
		__SUB0__=_sub0_,
		__SUB1__=_sub1_,
		__SUB2__=_sub2_,
)}"""  # FM/TBGLST_D/_01_00_CF.py
# ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱
_newFilename_ = f"""{N.MAKE_NAME(
		isNew_=True,
		__MODULE_NAME__=_moduleName_,
		__SUBD0__=_subd0_,
		__SUB0__=_sub0_,
		__SUB1__=_sub1_,
		__SUB2__=_sub2_,
)}"""  # FM/TBGLST_D/_01_00_CF_NEW.py
# ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱
__ID__ = N.MAKE_ID(
		("__FILENAME__", _filename_,),  # FM/TBGLST_D/_01_00_CF.py
		("__MODULE_NAME__", _moduleName_,),  # FM
		("__NEW_FILENAME__", _newFilename_,),  # FM/TBGLST_D/_01_00_CF_NEW.py
		("__SUBD0__", _subd0_,),  # TBGLST_D
		("__SUB0__", _sub0_,),  # _01
		("__SUB1__", _sub1_,),  # 00
		("__SUB2__", _sub2_,),  # CF
)
# ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱ ⟰0⟱
TBGLST = [
	(("CFVAL_____", FM.FMAX.NOP, "CFVAL_ENDS",), __ID__),
	(("CFVAL", FM.FMAX.NOP, "CFVAL_BEGINS",), __ID__),
	(("FMAX.SCTN0003_LAMBDA_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a lambda function <NAC><K_EVENT_NAME><lambda str>",), __ID__),
	(("FMAX.SCTN0003_TYPE_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a fake type used in the translation dict <NAC><K_EVENT_NAME><TYPE>",), __ID__),
	(("FMAXCF_SCTN0003", FM.FMAX.SCTN0106_SCTN_DEF, "SCTN0003", "lambda and types not included in SCTN0102",), __ID__),
	(("FMAX.SCTN0201_STR_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a STR in SCTN0201 <NAC><K_EVENT_NAME><str>",), __ID__),
	(("FMAX.SCTN0201_VAL_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a VAL in SCTN0201 <NAC><K_EVENT_NAME><VAL>",), __ID__),
	(("FMAXCF_SCTN0201", FM.FMAX.SCTN0106_SCTN_DEF, "SCTN0201", "CF defines",), __ID__),
	(("FMAX.SCTN0202_OPT_ADD_HLPLN", FM.FMAX.SCTN0101_AX_DEF, "add a line to the help for a PARM, after the comment is automatically added<NAC><PARM><ADDONHELPLINE>",), __ID__),
	(("FMAX.SCTN0202_OPT_STR_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a '-a[=]' in SCTN22 <NAC><PARM><KEY><VAL>",), __ID__),
	(("FMAX.SCTN0202_OPT_VAL_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a '-a[=]' in SCTN22 <NAC><PARM><KEY><VAL>",), __ID__),
	(("FMAX.SCTN0202_OPTDICT_STR_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a OPTNAME: 'str' in SCTN0202 <NAC><KEY><PARM><STRDEFAULT>",), __ID__),
	(("FMAX.SCTN0202_OPTDICT_VAL_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a OPTNAME: VAL in SCTN0202 <NAC><KEY><PARM><VALDEFAULT>",), __ID__),
	(("FMAXCF_SCTN0202", FM.FMAX.SCTN0106_SCTN_DEF, "SCTN0202", "CF options structures",), __ID__),
	(("FMAX.SCTN0203_DICT_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a dict in SCTN203 <NAC><DICTNAME><DICTMODE>",), __ID__),
	(("FMAX.SCTN0203_DICT_VS_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a dict STR in SCTN203 <NAC><DICTNAME><STR>",), __ID__),
	(("FMAX.SCTN0203_DICT_VV_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a dict VAL in SCTN203 <NAC><DICTNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN0203", FM.FMAX.SCTN0106_SCTN_DEF, "SCTN0203", "CF dict defines",), __ID__),
	(("FMAX.SCTN0204_LIST_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a list in SCTN204 <NAC><LISTNAME>",), __ID__),
	(("FMAX.SCTN0204_LIST_STR_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a list STR in SCTN204 <NAC><LISTNAME><STR>",), __ID__),
	(("FMAX.SCTN0204_LIST_VAL_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a VAL in a list in SCTN204 <NAC><LISTNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN0204", FM.FMAX.SCTN0106_SCTN_DEF, "SCTN0204", "CF list defines",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DICT_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a dict in PSG <NAC><CLASSNAME><DICTNAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DICT_SS_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a str-str to a dict <NAC><CLASSNAME><DICTNAME><STR><STR>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DICT_SV_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a str-val to a dict <NAC><CLASSNAME><DICTNAME><STR><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DICT_VS_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a str to a dict <NAC><CLASSNAME><DICTNAME><KEY><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DICT_VV_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a val to a dict in PSG <NAC><CLASSNAME><DICTNAME><KEY><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DPD_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a DPD debugPrintDict in PSG <NAC><CLASSNAME><DPDNAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_DPD_VV_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a val to a DPD debugPrintDict in PSG <NAC><CLASSNAME><DPDNAME><KEY><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_BLANKLINE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><FUNCNAME><PARMS>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_DEF_FROM_FILE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><FUNCNAME><FILENAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><FUNCNAME><PARMS>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_LAMBDA1_DEF", FM.FMAX.SCTN0101_AX_DEF, "add a lambda to the top of a function, usually for absorbing things",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_LAMBDA2_DEF", FM.FMAX.SCTN0101_AX_DEF, "add a lambda to the top of a function, usually for absorbing things",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_LINE_ADD", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><FUNCNAME><LINE>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_READ_FROM_FILE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><FUNCNAME><FILENAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_STR1_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a string in the class <NAC><CLASSNAME><FUNCNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_STR2_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a string in the class <NAC><CLASSNAME><FUNCNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_VAL1_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a value in the class <NAC><CLASSNAME><FUNCNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_FUNCTION_VAL2_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a value in the class <NAC><CLASSNAME><FUNCNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD1_LAMBDA", FM.FMAX.SCTN0101_AX_DEF, "define a string in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD1_LINE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><LINE>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD1_READ_FROM_FILE", FM.FMAX.SCTN0101_AX_DEF, "read a section of __init__ from a file in res/functions <NAC><CLASSNAME><FILENAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD1_STR", FM.FMAX.SCTN0101_AX_DEF, "define a string in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD1_VAL", FM.FMAX.SCTN0101_AX_DEF, "define a value in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_DICTIN_SS", FM.FMAX.SCTN0101_AX_DEF, "add a str-str to a dict <NAC><CLASSNAME><STR><STR>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_DICTIN_SV", FM.FMAX.SCTN0101_AX_DEF, "add a str-val to a dict <NAC><CLASSNAME><STR><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_DICTIN_VS", FM.FMAX.SCTN0101_AX_DEF, "add a str to a dict <NAC><CLASSNAME><KEY><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_DICTIN_VV", FM.FMAX.SCTN0101_AX_DEF, "add a val to a dict in PSG <NAC><CLASSNAME><KEY><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_FOREIGN_KEY", FM.FMAX.SCTN0101_AX_DEF, "add values to _DICT_KEYS, _DICT_KEYS_REVERSE_ for external elements like buttons and checkboxes <NAC><CLASSNAME><KEY>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_LAMBDA", FM.FMAX.SCTN0101_AX_DEF, "define a value in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_LINE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><LINE>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_READ_FROM_FILE", FM.FMAX.SCTN0101_AX_DEF, "read a section of __init__ from a file in res/functions <NAC><CLASSNAME><FILENAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_STR", FM.FMAX.SCTN0101_AX_DEF, "define a string in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD2_VAL", FM.FMAX.SCTN0101_AX_DEF, "define a value in the class <NAC><CLASSNAME><VALNAME><VAL>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_ADD3_LINE", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><LINE>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_INIT_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a class <NAC><CLASSNAME><PARMS>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_LIST_DEF", FM.FMAX.SCTN0101_AX_DEF, "define a list in PSG <NAC><CLASSNAME><LISTNAME>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_LIST_STR_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a str to a list in PSG <NAC><CLASSNAME><LISTNAME><STR>",), __ID__),
	(("FMAXCF_SCTN02FF_CLASS_LIST_VAL_ADD", FM.FMAX.SCTN0101_AX_DEF, "add a val to a list in PSG <NAC><CLASSNAME><LISTNAME><VAL>",), __ID__),
	(("FMAXCF", FM.FMAX.NOP, "FMAXCF_BEGINS",), __ID__),
	(("FMCF_____", FM.FMAX.NOP, "FMCF_ENDS",), __ID__),
	(("FMCF_SCTN0003_TYPE_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0003_TYPE_CMNT_DICT", "SCTN009 types comments",), __ID__),
	(("FMCF_SCTN0003_TYPE_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0003_TYPE_DICT", "SCTN003 types",), __ID__),
	(("FMCF_SCTN0201_DEF_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0201_DEF_CMNT_DICT", "SCTN201 defines comments dict",), __ID__),
	(("FMCF_SCTN0201_DEF_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0201_DEF_DICT", "SCTN201 defines dict",), __ID__),
	(("FMCF_SCTN0202_OPTIONS_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0202_OPTIONS_CMNT_DICT", "SCTN202 OPTIONS comments dict",), __ID__),
	(("FMCF_SCTN0202_OPTIONS_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0202_OPTIONS_DICT", "SCTN202 OPTIONS dict",), __ID__),
	(("FMCF_SCTN0202_OPTIONSDICT_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0202_OPTIONSDICT_CMNT_DICT", "SCTN202 OPTIONSDICT comments dict",), __ID__),
	(("FMCF_SCTN0202_OPTIONSDICT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0202_OPTIONSDICT_DICT", "SCTN202 OPTIONSDICT",), __ID__),
	(("FMCF_SCTN0202_OPTIONSHELPDICT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0202_OPTIONSHELPDICT_DICT", "SCTN202 OPTIONS HELPDICT",), __ID__),
	(("FMCF_SCTN0203_DICT_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0203_DICT_CMNT_DICT", "SCTN203 dict comments dict",), __ID__),
	(("FMCF_SCTN0203_DICT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0203_DICT_DICT", "SCTN203 dict dict",), __ID__),
	(("FMCF_SCTN0204_LIST_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0204_LIST_CMNT_DICT", "SCTN204 list comments dict",), __ID__),
	(("FMCF_SCTN0204_LIST_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN0204_LIST_DICT", "SCTN204 list dict",), __ID__),
	(("FMCF_SCTN02FF_CLASS_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_CMNT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_DEF_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_DEF_DICT", "str and val defines in a class",), __ID__),
	(("FMCF_SCTN02FF_CLASS_DICT_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_DICT_CMNT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_DICT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_DICT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_FUNCTION_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_FUNCTION_CMNT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_FUNCTION_DEF1_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_FUNCTION_DEF1_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_FUNCTION_DEF2_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_FUNCTION_DEF2_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_FUNCTION_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_FUNCTION_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_GROUP_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_GROUP_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_CMNT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DEF1_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DEF1_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DEF2_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DEF2_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DEF3_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DEF3_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DICTIN_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DICTIN_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_INIT_DICTINSTR_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_INIT_DICTINSTR_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_LIST_CMNT_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_LIST_CMNT_DICT", "",), __ID__),
	(("FMCF_SCTN02FF_CLASS_LIST_DICT", FM.FMAX.SCTN0103_DICT_DEF, "FMCF_SCTN02FF_CLASS_LIST_DICT", "",), __ID__),
	(("FMCF", FM.FMAX.NOP, "FMCF_BEGINS",), __ID__),
]


#
#
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
# * end of FM/TBGLST_D/_01_00_CF.py
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
#
#


#
