file /rcr/0-utils/0-desktop/runawayClock_DEV/PSG.py, line 2393, function findNextAlarmEvent
        NOWS updated next event |73795|20:29:55
        EVENT_ENTRIES |
{
	0: {
		'ALARMPOPUP_TEXT_TEXT': 'time to start toward bed',
		'DISMISSED': False,
		'enabled': True,
		'EVENTMODE': 'EVENTMODE_INTERVAL',
		'FIRSTRUN': False,
		'IS_ALERTING_NOW': False,
		'NAME': 'wind it up',
		'PREDISMISSABLE': True,
		'SNOOZABLE': False,
		'SNOOZED': False,
		'TIME_ALARM': 12600,
		'TIME_AT_LAST_RUN': None,
		'TIME_AT_NEXT': 73920,
		'TIME_INTERVAL': 240,
		'TIME_INTERVAL__BEGIN': 0,
		'TIME_INTERVAL__END': 0,
		'TIME_INTERVAL_START': 73680,
		'TIME_LEN_RING': 0
	},
	1: {
		'ALARMPOPUP_TEXT_TEXT': 'MOVE',
		'DISMISSED': False,
		'enabled': True,
		'EVENTMODE': 'EVENTMODE_INTERVAL',
		'FIRSTRUN': False,
		'IS_ALERTING_NOW': False,
		'NAME': 'off you go then',
		'PREDISMISSABLE': True,
		'SNOOZABLE': False,
		'SNOOZED': False,
		'TIME_ALARM': 0,
		'TIME_AT_LAST_RUN': None,
		'TIME_AT_NEXT': 73845,
		'TIME_INTERVAL': 135,
		'TIME_INTERVAL__BEGIN': 0,
		'TIME_INTERVAL__END': 0,
		'TIME_INTERVAL_START': 73710,
		'TIME_LEN_RING': 0
	}
}|
nextEventList_ |[
	(73845, 1, 'EVENTMODE_INTERVAL', 'off you go then'),
	(73920, 0, 'EVENTMODE_INTERVAL', 'wind it up')]|


# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
# SCTN0915 POPUPDIALOG
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
class CLASS_POPUP_INTERVAL(object):

	def __init__(self, title_, count_, splatArgs_=[]):
		self.POPUP_INTERVAL_DICT = {
			title: title_,
			auto_close: True,
			auto_close_duration: 5,
			non_blocking: True,
			no_titlebar: True,
			grab_anywhere: True,
			keep_on_top: True,
			modal: True,
			font: FONTSZ_ALERT_TEXT,
		}

		self.POPUP_INTERVAL_LIST = [
			f"""INTERVAL {title_} has expired {count_} times""",
			f"""clock OK to dismiss now or wait {self.POPUP_INTERVAL_DICT[auto_close_duration]}""",
		]


	def __enter__(self):
		SG.PopupAutoClose(
			*self.POPUP_INTERVAL_LIST,
			**self.POPUP_INTERVAL_DICT,
		)


# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
#

# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
# SCTN0915 POPUPDIALOG
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
class CLASS_POPUP_INTERVAL(object):
	# fold here ⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1

	def __init__(self, title_, count_, splatArgs_=[]):
		self.POPUP_INTERVAL_DICT = {
			title: title_,
			auto_close: True,
			auto_close_duration: 5,
			non_blocking: True,
			no_titlebar: True,
			grab_anywhere: True,
			keep_on_top: True,
			modal: True,
		}

		self.POPUP_INTERVAL_LIST = [
			f"""INTERVAL {title_} has expired {count_} times""",
			f"""click OK to dismiss now or wait {self.POPUP_INTERVAL_DICT[auto_close_duration]}""",
		].append(*splatArgs_)

		return self


	def __enter__(self):
		SG.PopupAutoClose(
			*self.POPUP_INTERVAL_LIST,
			**self.POPUP_INTERVAL_DICT,
		)




# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
# * POPUP_INTERVAL PUDLG
# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*

class CLASS_POPUP_INTERVAL(object):
	# fold here ⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1⥥1
	POPUP_INTERVAL_DICT = None
	POPUP_INTERVAL_LIST = None
	POPUP_INTERVAL_OBJ = None

	def __init__(self, title_, count_, splatArgs_=[]):
		self.POPUP_INTERVAL_DICT = {
			TITLE: "",  # title of the alert window
			AUTO_CLOSE: True,  # interval timers get auto dismiss by default
			AUTO_CLOSE_DURATION: 5,  # 5 seconds before auto closing an interval alert
			FONT: FONTSZ_ALERT_TEXT,  # no title bar on our popup
			GRAB_ANYWHERE: True,  # grab anywhere on our popup
			KEEP_ON_TOP: True,  # keep our popup on top
			MODAL: True,  # grab anywhere on our popup
			NON_BLOCKING: True,  # carry on with everything else
			NO_TITLEBAR: True,  # no title bar on our popup
			TIMEOUT_KEY: "__DISMISSED__",
		}

		self.POPUP_INTERVAL_LIST = [
			f"""INTERVAL {title_} has expired {count_} times""",
			f"""click OK to dismiss, or wait {self.POPUP_INTERVAL_DICT[AUTO_CLOSE_DURATION]}seconds from alarm""",
		]

		self.POPUP_INTERVAL_LIST.append(splatArgs_)
		self.POPUP_INTERVAL_OBJ = SG.popup_auto_close(
			*self.POPUP_INTERVAL_LIST,
			**self.POPUP_INTERVAL_DICT,
		)
		print(f"""{CF.NEWLINE}{CF.getDebugInfo()}
		{CF.IGMPP(self)}""")


	# fold here ⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1⥣1


# * #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*
#
#
